#!/bin/bash

e() {
	if [ -f $1 ]; then
		case $1 in
		*.tar.bz2) tar xjvf $1 ;;
		*.tar.gz) tar xzvf $1 ;;
		*.tar.xz) tar xJvf $1 ;;
		*.bz2) bunzip2 $1 ;;
		*.rar) unrar xv $1 ;;
		*.gz) gunzip $1 ;;
		*.tar) tar xvf $1 ;;
		*.tbz2) tar xjvf $1 ;;
		*.tgz) tar xzvf $1 ;;
		*.zip) unzip $1 ;;
		*.7z) 7z x $1 ;;
		*.xz) xz -vd $1 ;;
		*) echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

superls() { printf "\n" && colorls "$@" -a --sd && printf "\n"; }

bim() {
	for album in "$@"; do
		beet import -i ~/music/*/*"$album"*
		beet embedart -y "$album"
	done
}

bf() {
	IFS=$'\n'
	NOVOS=($(find ~/music -mindepth 2 -type d -mtime 0))
	unset IFS

	for album in $NOVOS; do
		beet import -i $album
		beet embedart -y $album
	done
}

pwlog() {
	git log "$@" --graph --oneline --decorate --color | less -SEXIER
}

mkill() { for pid in $(ps -ef | awk '/'"$@"'/ {print $2}'); do kill -9 $pid; done; }

unhistory() {
	LC_ALL=C sed -i '/'$1'/d' $HISTFILE
	histdb --forget "$1"
}

#dit add
da() {
	dit ls-files | grep "$1" | xargs git --git-dir=$HOME/.cfg/ --work-tree=$HOME add
}

#dit diff
gdd() {
	dit ls-files | grep "$1" | xargs git --git-dir=$HOME/.cfg/ --work-tree=$HOME diff
}

#dit difftool
gdt() {
	dit ls-files | grep "$1" | xargs git --git-dir=$HOME/.cfg/ --work-tree=$HOME difftool -y
}

#git difftool
gt() {
	git ls-files | grep "$1" | xargs git difftool -y
}

snpadd() {
	echo $2 >>~/.config/snippet_paste/$1
	echo "criado snippet $1"
}

snped() {
	find ~/.config/snippet_paste -iname "*$@*" -type f -print0 | xargs -0 vim
}

snprm() {
	found=$(find ~/.config/snippet_paste -iname "*$@*" -type f)
	set -f
	printf "%s\n\t" $found
	printf "remove snippet?[y/N]"
	read ans
	[ $ans = "y" ] && mv $found ~/.local/share/Trash/files
}

lem() {
	files=$@
	emacsclient -s $EMACS_SERVER_SOCKET -c ${files:="."} &
	disown
}

# crop=width:height:initial-x:initial-y
# par expansion da ext = ${file##*.}
cropedp() {
	for file in $@; do
		ffmpeg -i $file -vf crop=1366:768:0:900 ${file%%.*}.jpg
	done
}

crophdmi() {
	for file in $@; do
		ffmpeg -i $file -vf crop=1600:900:0:0 ${file%%.*}.jpg
	done
}

mimegio() {
	gio info $1 | grep "standard::content-type" | awk -F" " '{print $2}'
}

cvgen() {
	if [[ -z $1 || $1 != "m" && $1 != "h" ]]; then
		echo "m ou h"
		return
	fi

	DATE=$(date +%y%m%d-%H%M%S)
	FOLDER=~/docs/cv-typst

	# for file in $(ls $FOLDER/*typ); do
	# 	typst compile $file
	# 	echo $file compilado para ${file%%.*}.pdf
	# done

	if [[ $1 == "m" ]]; then
		typst compile $FOLDER/maquina.typ
		cp $FOLDER/maquina.pdf ~/drive/curriculos/leonardo_zerino$DATE.pdf
	elif [[ $1 == "h" ]]; then
		typst compile $FOLDER/humano.typ
		cp $FOLDER/humano.pdf ~/drive/curriculos/leonardo_zerino$DATE.pdf
	fi
}
